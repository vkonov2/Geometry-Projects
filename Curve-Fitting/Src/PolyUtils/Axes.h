#pragma once

#include "../Geometry/AllGeometry.h"
#include "PolyUtilsFunctions.h"
#include "../Geometry/Polyhedr.h"
#include "../Mathem/Jacobi.h"
#include "PolyUtilsFunctions.h"

using namespace std;

/*------------------------------------------------------------------------------------------------------
Вычисление главных осей инерции.
Poly - многогранник, центр масс которого находится в точке (0, 0, 0) [должен быть определен при передаче в фунцию]
eigen_vectors - хранилище для осей  [не обязан быть определен при передаче в фунцию]
eigen_values - хранилище для собственных значений, соответствующих eigen_vectors [не обязан быть определен при передаче в фунцию]
Info - массив структур, i-ый элемент которого содержит поля: [не обязан быть определен при передаче в фунцию]
    area - площадь i-ой грани
    x = (1 \ n) * sum_{i = 0}^{n - 1} x_i координата центра i-ой грани
    y = (1 \ n) * sum_{i = 0}^{n - 1} y_i координата центра i-ой грани
    z = (1 \ n) * sum_{i = 0}^{n - 1} z_i координата центра i-ой грани
    solid_angle_x, solid_angle_y, solid_angle_z - координаты центра i-ой пирамиды, основание которой - i-ая грань
    solid_angle_mass - масса i-ой грани в терминах телесных углов
    volume - телесный объем, соответствующий i-ой грани

По окончании функция в eigen_vectors и eigen_values пишет собственные вектороа и собственные значения соответственно.
------------------------------------------------------------------------------------------------------*/

int Axis(POLYHEDRON* Poly, double** eigen_vectors, double* eigen_values, PlaneInfo* Info);